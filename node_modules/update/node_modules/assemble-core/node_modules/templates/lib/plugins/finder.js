'use strict';

var fs = require('fs');
var path = require('path');
var utils = require('../utils');

module.exports = function(proto) {

  proto.getView = function(key, options) {
    var opts = utils.extend({}, this.options, options);
    var cwd = opts.cwd || process.cwd();
    var view = this.views[key]
      || this.views[this.renameKey(key)]
      || this.views[path.resolve(cwd, key)]
      || this.views[path.relative(cwd, key)];

    if (view) return view;

    // TODO: move this code into plugin for matching or lookups
    var fp = path.join(cwd, key);
    if (fs.existsSync(fp)) {
      var str = fs.readFileSync(fp);
      view = this.setView(key, {
        options: utils.extend({}, opts, {renameKey: false}),
        key: key,
        contents: str
      });
      if (view) return view;
    }

    this.__exts__ = this.__exts__ || {};

    // var basename = path.basename(key, path.extname(key));
    // view = this.getView(basename);
    // if (view) return view;

    var ext = path.extname(fp);
    if (!ext) ext = opts.engine;
    if (!ext) return null;

    if (ext.charAt(0) !== '.') {
      ext = '.' + ext;
    }

    if (this.__exts__[ext]) {
      return null;
    }

    this.__exts__[ext] = true;
    var res = this.getView(key + ext);
    return res;
  };
};
